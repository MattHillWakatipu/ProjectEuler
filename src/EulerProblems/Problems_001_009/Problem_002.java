package EulerProblems.Problems_001_009;

import EulerProblems.EulerProblem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class Problem_002 implements EulerProblem {

    @Override
    public String calculateResult() {

        int limit = 4_000_000;

        int currentFib = 1;
        int prevFib = 1;

        int sum = 0;

        while (currentFib < limit) {

            if (currentFib % 2 == 0) {
                sum += currentFib;
            }

            int nextFib = currentFib + prevFib;
            prevFib = currentFib;
            currentFib = nextFib;
        }

        return String.valueOf((sum));
    }
}
